version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto21
  pre_build:
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo COMMIT_HASH is $COMMIT_HASH
      - BUILD_TAG=${COMMIT_HASH:=latest}
      - echo BULID_TAG is $BUILD_TAG
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - chmod +x gradlew
      - ./gradlew bootBuildImage --imageName=$IMAGE_NAME:BUILD_TAG
      - docker tag $IMAGE_NAME:BUILD_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

# CodeDeploy 연계를 위한 appspec 및 scripts 생성
## appspec은 root directory에 위치해야 하므로 discard-paths 적용
artifacts:
  files:
    - scripts/common/ecr-login.sh
    - scripts/$CONFIG_ENV/docker-restart.sh
    - scripts/$CONFIG_ENV/appspec.yml
  discard-paths: yes

cache:
  paths:
    - '/root/.gradle/caches/**/*'
    - '/root/.gradle/wrapper/**/*'